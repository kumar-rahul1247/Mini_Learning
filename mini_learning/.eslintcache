[{"H:\\React\\MiniLearning\\mini_learning\\src\\index.js":"1","H:\\React\\MiniLearning\\mini_learning\\src\\App.js":"2","H:\\React\\MiniLearning\\mini_learning\\src\\reportWebVitals.js":"3","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Login\\Login.js":"4","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Spinner\\spinner.js":"5","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Signup\\Signup.js":"6","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Header\\Header.js":"7","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Profile\\Profile.js":"8","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\course\\course.js":"9","H:\\React\\MiniLearning\\mini_learning\\src\\redux\\actions\\authAction.js":"10","H:\\React\\MiniLearning\\mini_learning\\src\\redux\\store\\authStore.js":"11","H:\\React\\MiniLearning\\mini_learning\\src\\redux\\reducer\\authReducer.js":"12","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Create\\Create.js":"13","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\AllCourses\\AllCourses.js":"14","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\AllCourses\\CourseRow.js":"15","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\course\\Course.js":"16","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\ProtectedRoute\\ProtectedRoute.js":"17"},{"size":500,"mtime":499162500000,"results":"18","hashOfConfig":"19"},{"size":549,"mtime":1607617616196,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":4134,"mtime":1607626014291,"results":"22","hashOfConfig":"19"},{"size":191,"mtime":1607513231421,"results":"23","hashOfConfig":"19"},{"size":5954,"mtime":1607521597629,"results":"24","hashOfConfig":"19"},{"size":1963,"mtime":1607621552308,"results":"25","hashOfConfig":"19"},{"size":6335,"mtime":1607610321954,"results":"26","hashOfConfig":"19"},{"size":1090,"mtime":1607606862311,"results":"27","hashOfConfig":"19"},{"size":306,"mtime":1607534785178,"results":"28","hashOfConfig":"19"},{"size":157,"mtime":1607533070763,"results":"29","hashOfConfig":"19"},{"size":625,"mtime":1607524141220,"results":"30","hashOfConfig":"19"},{"size":5959,"mtime":1607621530161,"results":"31","hashOfConfig":"19"},{"size":5462,"mtime":1607601337417,"results":"32","hashOfConfig":"19"},{"size":853,"mtime":1607601439922,"results":"33","hashOfConfig":"19"},{"size":1208,"mtime":1607610512859,"results":"34","hashOfConfig":"19"},{"size":1276,"mtime":1607619903788,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1vc3wjq",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"H:\\React\\MiniLearning\\mini_learning\\src\\index.js",[],["74","75"],"H:\\React\\MiniLearning\\mini_learning\\src\\App.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\reportWebVitals.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Login\\Login.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Spinner\\spinner.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Signup\\Signup.js",["76","77","78"],"import React, { useState, useEffect } from 'react'\r\n//import './Signup.css'\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\nimport Spinner from '../Spinner/spinner';\r\n\r\nfunction Signup(props) {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [error, setError] = useState(null);\r\n    const [role, setRole] = useState(\"STD\");\r\n    const [profilePic, setProfilePic] = useState(null);\r\n    const [picurl, setPicurl] = useState(\"\");\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n        if (picurl) {\r\n            console.log(\"I am Again Effect\")\r\n            console.log(picurl)\r\n            //registerSignupDetail();\r\n        }\r\n\r\n    }, [picurl])\r\n\r\n\r\n    let submithandler = (event) => {\r\n        event.preventDefault();\r\n        console.log(\" i am clicked called\")\r\n        if (!email || !password || !name) {\r\n            setError(\"All Field are mandatory\");\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n        if (profilePic) {\r\n            //uploadProfilePic()\r\n        }\r\n        else {\r\n            registerSignupDetail();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    let registerSignupDetail = () => {\r\n\r\n        fetch('/signup', {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n                password,\r\n                name,\r\n                role\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setIsLoading(false)\r\n                console.log(data);\r\n                if (data.error) {\r\n                    setError(data.error)\r\n                }\r\n                else {\r\n                    props.history.push('/signin');\r\n                }\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(false)\r\n                setError(\"Something went wrong..!!\")\r\n                console.log(err.message)\r\n            })\r\n    }\r\n\r\n\r\n    // let uploadProfilePic = () => {\r\n    //     console.log(\"I am Upload\")\r\n    //     console.log(profilePic)\r\n    //     const data = new FormData();\r\n    //     data.append(\"file\", profilePic);\r\n    //     data.append(\"upload_preset\", \"clickza\");\r\n    //     data.append(\"cloud_name\", \"reyhul\")\r\n\r\n    //     fetch('\thttps://api.cloudinary.com/v1_1/reyhul/image/upload', {\r\n    //         method: \"post\",\r\n    //         body: data\r\n    //     })\r\n    //         .then(res => res.json())\r\n    //         .then(data => {\r\n    //             //loading will go to register\r\n    //             setPicurl(data.url);\r\n    //             console.log(data)\r\n    //         })\r\n    //         .catch(err => {\r\n    //             setIsLoading(false)\r\n    //             console.log(err)\r\n    //         })\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"Login\">\r\n            <form className=\"card\" onSubmit={(event)=>submithandler(event)}>\r\n                {error ? <p className='ErrorMessage'>{error}</p> : null}\r\n                <h2>Mini Learning SignUp</h2>\r\n                {\r\n                    isLoading ? <Spinner /> : (\r\n                        <>\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"Email\"\r\n                                value={email}\r\n                                onChange={(event) => {\r\n                                    setEmail(event.target.value);\r\n                                    setError(null);\r\n                                }\r\n                                }\r\n                            />\r\n                            <input\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n                                placeholder=\"Password\"\r\n                                value={password}\r\n                                onChange={(event) => {\r\n                                    setPassword(event.target.value);\r\n                                    setError(null);\r\n                                }}\r\n                            />\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                placeholder=\"Name\"\r\n                                value={name}\r\n                                onChange={(event) => {\r\n                                    setName(event.target.value);\r\n                                    setError(null);\r\n                                }}\r\n                            />\r\n\r\n                            <select name=\"role\" id=\"role\" onChange={(event)=>setRole(event.target.value)}>\r\n                                <option value=\"STD\">Student</option>\r\n                                <option value=\"FAC\">Faculty</option>\r\n                            </select>   \r\n                                                        {/* <div className=\"upload__button\">\r\n                                <label htmlFor=\"uploadImg\" className=\"upload__label \">Profile Pic</label>\r\n                                <input\r\n                                    id=\"uploadImg\"\r\n                                    type=\"file\"\r\n                                    name=\"file\"\r\n                                    onChange={(event) => setProfilePic(event.target.files[0])}\r\n                                />\r\n                                <AddPhotoAlternateIcon className=\"addImage\" />\r\n                            </div> */}\r\n\r\n                            <button type=\"submit\">\r\n                                SignUp\r\n                            </button>\r\n                        </>\r\n                    )}\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n\r\n\r\n\r\n\r\n\r\n\r\n","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Header\\Header.js",["79","80"],"H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Profile\\Profile.js",["81","82","83"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport './Profile.css'\r\nimport {connect} from 'react-redux';\r\nimport NoPic from '../../StaticImage/noProfilePic.jpg'\r\nimport Spinner from '../Spinner/spinner';\r\nimport CourseCard from '../course/Course'\r\nimport { setUser } from '../../redux/actions/authAction'\r\n\r\n\r\nfunction Profile({loggedInuser, dispatchUser}) {\r\n   \r\n    const [error, setError] = useState(\"\");\r\n    const [course, setCourse] = useState([])\r\n    const [isLoading, setIsLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n        \r\n        if(loggedInuser.user.role==='FAC'){\r\n            uploadedCourse();\r\n        \r\n        }\r\n            \r\n    }, [] )\r\n\r\n\r\n    let uploadedCourse = () => {\r\n        fetch('/mycourse', {\r\n            method: \"get\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + loggedInuser.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                console.log(\"DNAGER===========================\")\r\n                setIsLoading(false)\r\n                if (data.error) {\r\n                    setError({ error: data.error })\r\n                }\r\n                else {\r\n                    setCourse(data.mycourse);\r\n                  console.log(data)\r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(false);\r\n                setError(\"Unable to Fetch Courses. Something went Wrong\")\r\n                console.log(err.message)\r\n            })\r\n\r\n    }\r\n\r\n\r\n    let unSubscribeCourse = (courseId) => {\r\n        fetch('/unsubscribe', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+loggedInuser.token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                courseId: courseId\r\n            })\r\n        \r\n        })\r\n        .then( res => res.json())\r\n        .then( data => {\r\n            \r\n            console.log(data)\r\n\r\n            \r\n            //console.log(newCourse)\r\n            console.log(\"--------------$$$$$$$$$$$$$$$$$$$$$--------\")\r\n            console.log(setUser({...loggedInuser,user:data.userData}))\r\n            dispatchUser({...loggedInuser,user:data.userData});\r\n            \r\n        })\r\n    }\r\n\r\n    let allcourses=null;\r\n    if(loggedInuser.user.role==='FAC'){\r\n        allcourses= !course.length ? \"No Course Found.. :-(\" :\r\n                        course.map(item => (\r\n                                <CourseCard key = {item._id} item={item} role=\"FAC\" />\r\n                            ))\r\n    }\r\n    else{\r\n        allcourses= !loggedInuser.user.subcourse.length ? \"No Course Found.. :-(\" :\r\n                        loggedInuser.user.subcourse.map(item => (\r\n                                <CourseCard key = {item._id} item={item} role=\"STD\" onHandler={unSubscribeCourse}/>\r\n                            ))\r\n    }\r\n    return (<>\r\n            {\r\n                !loggedInuser ? <><h2 style={{ textDecoration: \"none\", margin: \"150px auto\" }}> Loading.....!! </h2><Spinner /></> : (\r\n\r\n                    <div className=\"profile__container\">\r\n                        <div className=\"profile__upper\">\r\n                            <div className=\"profile__image\">\r\n\r\n                                <img className=\"image\"\r\n                                    src={NoPic}\r\n                                    alt=\"RK\"\r\n                                />\r\n\r\n                            </div>\r\n\r\n                            <div className=\"profile__content\">\r\n                                <h2>{loggedInuser ? loggedInuser.user.name : null}</h2>\r\n                                <h4 style={{ fontWeight: 500, fontSize: \"16px\" }}>{loggedInuser && loggedInuser.user.email}</h4>\r\n                                {loggedInuser.user.role==='STD'? <p>STUDENT</p> : <p>FACULTY</p>}\r\n                                <div className=\"profile__summary\">\r\n                                    {\r\n                                        loggedInuser.user.role==='STD' ?\r\n                                            <h5>{loggedInuser.user.subcourse.length} Course Subscribed</h5> :\r\n                                            <h5>{course.length} Course Posted</h5>\r\n                                    }\r\n                                    \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"profile__gallery\">\r\n                            {error ? <p className=\"ErrorMessage\">{error}</p> :null }\r\n\r\n                            {allcourses}\r\n\r\n                            {/* <img  className=\"item\" src=\"https://images.unsplash.com/photo-1572276643543-90ec6f977376?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\" alt=\"\"/>\r\n                            <img  className=\"item\" src=\"https://images.unsplash.com/photo-1567267020524-07219c353d4a?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\" alt=\"\"/>\r\n                            <img  className=\"item\" src=\"https://images.unsplash.com/photo-1568207182762-8838beec7dca?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\" alt=\"\"/>\r\n                            <img  className=\"item\" src=\"https://images.unsplash.com/photo-1578553951253-48c6eb50ae41?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\" alt=\"\"/>\r\n                            <img  className=\"item\" src=\"https://images.unsplash.com/photo-1549276755-bdd15cddcfbf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\" alt=\"\"/>\r\n                            <img  className=\"item\" src=\"https://images.unsplash.com/photo-1596126753378-b077b0913842?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\" alt=\"\"/> */}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n        </>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        loggedInuser: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        dispatchUser: (data) => dispatch(setUser(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Profile)\r\n","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\course\\course.js",["84"],"H:\\React\\MiniLearning\\mini_learning\\src\\redux\\actions\\authAction.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\redux\\store\\authStore.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\redux\\reducer\\authReducer.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\Component\\Create\\Create.js",["85","86"],"H:\\React\\MiniLearning\\mini_learning\\src\\Component\\AllCourses\\AllCourses.js",["87","88"],"import React, {useState, useEffect} from 'react'\r\nimport './AllCourses.css'\r\nimport {connect} from 'react-redux';\r\nimport { setUser } from '../../redux/actions/authAction'\r\nimport Spinner from '../Spinner/spinner';\r\nimport CourseRow from '../AllCourses/CourseRow';\r\n\r\nfunction AllCourses({loggedInuser, dispatchUser}) {\r\n\r\n    const [allCourse, setAllCourse] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch('/allcourse', {\r\n            method: \"get\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + loggedInuser.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(\"-------**************************\")\r\n                console.log(data);\r\n                \r\n                console.log(\"-------***********//////////////////***************\")\r\n                if (data.error) {\r\n                    setError({ error: data.error })\r\n                }\r\n                else {\r\n                    console.log(data.courses)\r\n                    setAllCourse(data.courses);\r\n                    setIsLoading(false)\r\n                    \r\n                }\r\n\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(false);\r\n                setError(\"Unable to Fetch Courses. Something went Wrong\")\r\n                console.log(err.message)\r\n            })\r\n\r\n        \r\n        \r\n    }, []);\r\n\r\n    let onSubscribeHandle = (courseId, operation) =>{\r\n        if(operation === \"subs\")\r\n            subscribeCourse(courseId)\r\n        else  {\r\n            unSubscribeCourse(courseId);\r\n        }  \r\n           \r\n    }\r\n    \r\n    let subscribeCourse = (courseId) => {\r\n        fetch('/subscribe', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+loggedInuser.token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                courseId: courseId\r\n            })\r\n        \r\n        })\r\n        .then( res => res.json())\r\n        .then( data => {\r\n            \r\n\r\n            let newCourse=[]\r\n\r\n            for (const item of allCourse) {\r\n                if(item._id !== data.updatedcourse._id){\r\n                    newCourse.push(item)\r\n                }\r\n                else{\r\n                    newCourse.push(data.updatedcourse)\r\n                }\r\n            }\r\n            console.log(\"++++++++++++++++++++\")\r\n            console.log(newCourse)\r\n            console.log(data.userData)\r\n            setAllCourse(newCourse);\r\n\r\n            dispatchUser({...loggedInuser,user:data.userData});\r\n            //localStorage.setItem(\"user\", JSON.stringify(data));\r\n            // setUser(data);\r\n           \r\n            // setUserProfile({\r\n            //     ...userProfile,\r\n            //     user: {\r\n            //         ...userProfile.user,\r\n            //         followers: [...userProfile.user.followers, data._id]\r\n            //     }\r\n            // });\r\n            // console.log(userProfile)\r\n            console.log(\"After..\")\r\n        })\r\n    }\r\n\r\n\r\n    let unSubscribeCourse = (courseId) => {\r\n        fetch('/unsubscribe', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+loggedInuser.token,\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                courseId: courseId\r\n            })\r\n        \r\n        })\r\n        .then( res => res.json())\r\n        .then( data => {\r\n            \r\n            console.log(data)\r\n\r\n            let newCourse=[]\r\n\r\n            for (const item of allCourse) {\r\n                if(item._id !== data.updatedcourse._id){\r\n                    newCourse.push(item)\r\n                }\r\n                else{\r\n                    newCourse.push(data.updatedcourse)\r\n                }\r\n            }\r\n            \r\n            console.log(newCourse)\r\n            console.log(\"--------------$$$$$$$$$$$$$$$$$$$$$--------\")\r\n            console.log(setUser({...loggedInuser,user:data.userData}))\r\n            dispatchUser({...loggedInuser,user:data.userData});\r\n            setAllCourse(newCourse);\r\n            //localStorage.setItem(\"user\", JSON.stringify(data));\r\n            // setUser(data);\r\n           \r\n            // setUserProfile({\r\n            //     ...userProfile,\r\n            //     user: {\r\n            //         ...userProfile.user,\r\n            //         followers: [...userProfile.user.followers, data._id]\r\n            //     }\r\n            // });\r\n            // console.log(userProfile)\r\n            console.log(\"After..\")\r\n        })\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            {isLoading ? <Spinner/> : allCourse.map((item)=>{\r\n                return <CourseRow \r\n                    key={item._id}\r\n                    course = {item} \r\n                    loggedInuser={loggedInuser.user} \r\n                    subsHandler={onSubscribeHandle}/>\r\n            })}\r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nlet mapStateToProps = state => {\r\n    return {\r\n        loggedInuser: state\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>{\r\n    return {\r\n        dispatchUser: (data) => dispatch(setUser(data))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AllCourses)\r\n","H:\\React\\MiniLearning\\mini_learning\\src\\Component\\AllCourses\\CourseRow.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\Component\\course\\Course.js",[],"H:\\React\\MiniLearning\\mini_learning\\src\\Component\\ProtectedRoute\\ProtectedRoute.js",["89"],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":29},{"ruleId":"94","severity":1,"message":"98","line":13,"column":24,"nodeType":"96","messageId":"97","endLine":13,"endColumn":37},{"ruleId":"94","severity":1,"message":"99","line":14,"column":20,"nodeType":"96","messageId":"97","endLine":14,"endColumn":29},{"ruleId":"94","severity":1,"message":"100","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":27},{"ruleId":"94","severity":1,"message":"101","line":1,"column":29,"nodeType":"96","messageId":"97","endLine":1,"endColumn":37},{"ruleId":"94","severity":1,"message":"100","line":1,"column":38,"nodeType":"96","messageId":"97","endLine":1,"endColumn":48},{"ruleId":"94","severity":1,"message":"102","line":14,"column":12,"nodeType":"96","messageId":"97","endLine":14,"endColumn":21},{"ruleId":"103","severity":1,"message":"104","line":23,"column":8,"nodeType":"105","endLine":23,"endColumn":10,"suggestions":"106"},{"ruleId":"107","severity":2,"message":"108","line":9,"column":19,"nodeType":"96","endLine":9,"endColumn":29},{"ruleId":"94","severity":1,"message":"95","line":5,"column":8,"nodeType":"96","messageId":"97","endLine":5,"endColumn":29},{"ruleId":"103","severity":1,"message":"109","line":28,"column":8,"nodeType":"105","endLine":28,"endColumn":10,"suggestions":"110"},{"ruleId":"94","severity":1,"message":"111","line":12,"column":12,"nodeType":"96","messageId":"97","endLine":12,"endColumn":17},{"ruleId":"103","severity":1,"message":"112","line":47,"column":8,"nodeType":"105","endLine":47,"endColumn":10,"suggestions":"113"},{"ruleId":"103","severity":1,"message":"114","line":27,"column":8,"nodeType":"105","endLine":27,"endColumn":10,"suggestions":"115"},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"no-unused-vars","'AddPhotoAlternateIcon' is defined but never used.","Identifier","unusedVar","'setProfilePic' is assigned a value but never used.","'setPicurl' is assigned a value but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'isLoading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loggedInuser.user.role' and 'uploadedCourse'. Either include them or remove the dependency array.","ArrayExpression",["118"],"react-hooks/rules-of-hooks","React Hook \"useHistory\" is called in function \"course\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","React Hook useEffect has a missing dependency: 'props.location.state'. Either include it or remove the dependency array.",["119"],"'error' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loggedInuser.token'. Either include it or remove the dependency array.",["120"],"React Hook useEffect has missing dependencies: 'history' and 'loggedInuser.user'. Either include them or remove the dependency array.",["121"],"no-global-assign","no-unsafe-negation",{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},"Update the dependencies array to be: [loggedInuser.user.role, uploadedCourse]",{"range":"130","text":"131"},"Update the dependencies array to be: [props.location.state]",{"range":"132","text":"133"},"Update the dependencies array to be: [loggedInuser.token]",{"range":"134","text":"135"},"Update the dependencies array to be: [history, loggedInuser.user]",{"range":"136","text":"137"},[683,685],"[loggedInuser.user.role, uploadedCourse]",[834,836],"[props.location.state]",[1558,1560],"[loggedInuser.token]",[727,729],"[history, loggedInuser.user]"]